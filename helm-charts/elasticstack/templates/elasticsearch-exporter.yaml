{{- if and .Values.exporter.enabled -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "exporter-{{ .Values.elasticsearch.name }}-{{ .Values.customer }}"
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/component: exporter
    app.kubernetes.io/name: "exporter-{{ .Values.elasticsearch.name }}-{{ .Values.customer }}"
    elastic_cluster: "{{ .Values.elasticsearch.name }}-{{ .Values.customer }}-{{ .Values.environment }}"
    customer: {{ .Values.customer }}
    environment: {{ .Values.environment }}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/name: "exporter-{{ .Values.elasticsearch.name }}-{{ .Values.customer }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/component: exporter
        app.kubernetes.io/name: "exporter-{{ .Values.elasticsearch.name }}-{{ .Values.customer }}"
        elastic_cluster: "{{ .Values.elasticsearch.name }}-{{ .Values.customer }}-{{ .Values.environment }}"
        customer: {{ .Values.customer }}
        environment: {{ .Values.environment }}        
    spec:
      containers:
        - command:
            - /bin/elasticsearch_exporter
            - --es.uri=https://{{ .Values.elasticsearch.name }}-es-ingest-data:9200
            - --es.ssl-skip-verify
            - --es.all
          image: quay.io/prometheuscommunity/elasticsearch-exporter:latest
          securityContext:
            capabilities:
              drop:
                - SETPCAP
                - MKNOD
                - AUDIT_WRITE
                - CHOWN
                - NET_RAW
                - DAC_OVERRIDE
                - FOWNER
                - FSETID
                - KILL
                - SETGID
                - SETUID
                - NET_BIND_SERVICE
                - SYS_CHROOT
                - SETFCAP
            readOnlyRootFilesystem: true
          env:
          - name: ES_USERNAME
            value: "elastic"
          - name: ES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.elasticsearch.name }}-es-elastic-user 
                key: elastic            
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9114
            initialDelaySeconds: 30
            timeoutSeconds: 10
          name: "exporter-{{ .Values.elasticsearch.name }}-{{ .Values.customer }}"
          ports:
            - containerPort: 9114
              name: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9114
            initialDelaySeconds: 10
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 64Mi
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        runAsGroup: 10000
        runAsUser: 10000
        fsGroup: 10000
---
kind: Service
apiVersion: v1
metadata:
  name: "exporter-{{ .Values.elasticsearch.name }}-{{ .Values.customer }}"
  namespace: {{ .Values.namespace }}
  labels:
    elastic_cluster:  "{{ .Values.elasticsearch.name }}-{{ .Values.customer }}-{{ .Values.environment }}"
    customer: {{ .Values.customer }}
    environment: {{ .Values.environment }}    
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '9114'
spec:
  selector:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/name: "exporter-{{ .Values.elasticsearch.name }}-{{ .Values.customer }}"
  ports:
  - name: "exporter-{{ .Values.elasticsearch.name }}-{{ .Values.customer }}"
    protocol: TCP
    port: 9114
    targetPort: 9114
{{- end }}    